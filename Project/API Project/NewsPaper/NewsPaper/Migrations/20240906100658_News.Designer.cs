// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsPaper.Model;

#nullable disable

namespace NewsPaper.Migrations
{
    [DbContext(typeof(NewsDbContext))]
    [Migration("20240906100658_News")]
    partial class News
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NewsPaper.Model.Article", b =>
                {
                    b.Property<int>("ArticleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleID"));

                    b.Property<int>("AuthorID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("ArticleID");

                    b.HasIndex("AuthorID");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ArticleID = 1,
                            AuthorID = 1,
                            Content = "A major event has shaken the tech world, with significant implications for the industry.",
                            PublishedDate = new DateTime(2024, 8, 27, 15, 36, 56, 203, DateTimeKind.Local).AddTicks(2747),
                            Title = "Breaking News: Major Event in Tech",
                            Views = 1200
                        },
                        new
                        {
                            ArticleID = 2,
                            AuthorID = 2,
                            Content = "The latest advances in healthcare technology are transforming patient care.",
                            PublishedDate = new DateTime(2024, 9, 1, 15, 36, 56, 203, DateTimeKind.Local).AddTicks(2768),
                            Title = "Healthcare Advances in 2024",
                            Views = 850
                        },
                        new
                        {
                            ArticleID = 3,
                            AuthorID = 2,
                            Content = "AI and robotics are set to revolutionize various industries. Here's what to expect in the coming years.",
                            PublishedDate = new DateTime(2024, 9, 4, 15, 36, 56, 203, DateTimeKind.Local).AddTicks(2770),
                            Title = "The Future of AI and Robotics",
                            Views = 2300
                        });
                });

            modelBuilder.Entity("NewsPaper.Model.Author", b =>
                {
                    b.Property<int>("AuthorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorID"));

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CredibilityScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AuthorID");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorID = 1,
                            Bio = "John Doe is a veteran journalist with over 20 years of experience in investigative reporting.",
                            CredibilityScore = 9.5m,
                            Name = "John Doe"
                        },
                        new
                        {
                            AuthorID = 2,
                            Bio = "Jane Smith is an award-winning author and editor, known for her insightful articles on technology and innovation.",
                            CredibilityScore = 8.7m,
                            Name = "Jane Smith"
                        });
                });

            modelBuilder.Entity("NewsPaper.Model.Article", b =>
                {
                    b.HasOne("NewsPaper.Model.Author", "Authors")
                        .WithMany("Articles")
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Authors");
                });

            modelBuilder.Entity("NewsPaper.Model.Author", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
